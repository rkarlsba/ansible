# vim:ts=2:sw=2:sts=2:et:ai

- hosts: docker
  strategy: free
  remote_user: root
  vars_files:
    - vars/debian.yaml

  tasks:

  - name: Install pre-reqs for Docker and Ansible
    ansible.builtin.apt:
      state: latest
      update_cache: yes
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
        - apt-transport-https
        - bc

  - name: Add the GPG key for Docker
    shell: 'curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg'

  - name: Add the repository to fetch the docker package
    shell: 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian bullseye stable" | tee /etc/apt/sources.list.d/docker.list'

  - name: Update source list and then install docker
    ansible.builtin.apt:
      update_cache: yes
      name: docker-ce
      state: latest

  - name: Install the Docker module for Python, required by ansible
    pip:
      name: docker

  - name: Pull the official Debian image using the container_image variable. This image will be used in next step.
    docker_image:
      name: "{{ container_image }}"
      source: pull

  - name: Creates 3 containers, using the variables we defined in the vars file
    docker_container:
      name: "{{ container_name }}{{ item }}"
      image: "{{ container_image }}"
      command: "{{ command_to_run }}"
      state: present
    with_sequence: count={{ no_containers }}
