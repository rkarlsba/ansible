# vim:ts=2:sw=2:sts=2:et:ai

- hosts: restic
  strategy: free

  remote_user: root
  tasks:
  - name: Install restic from apt
    ansible.builtin.apt:
      update_cache: yes
      name: restic
      state: latest

  - name: Do a restic self-update
    ansible.builtin.command: restic self-update

  - name: Copy restic backup config
    ansible.builtin.copy:
      src: files/etc/default/restic
      dest: /etc/default/restic
      force: yes
      owner: root
      group: root
      mode: '0644'

  - name: Copy restic backup script
    ansible.builtin.copy:
      src: files/usr/local/bin/backup-to-restic.sh
      dest: /usr/local/bin/backup-to-restic.sh
      force: yes
      owner: root
      group: root
      mode: '0755'

  - name: Copy skeleton for pre-exec script
    ansible.builtin.copy:
      src: files/usr/local/bin/restic-backup-pre-exec.sh
      dest: /usr/local/bin/restic-backup-pre-exec.sh
      force: no
      owner: root
      group: root
      mode: '0755'

  - name: Copy skeleton for post-exec script
    ansible.builtin.copy:
      src: files/usr/local/bin/restic-backup-post-exec.sh
      dest: /usr/local/bin/restic-backup-post-exec.sh
      force: no
      owner: root
      group: root
      mode: '0755'

  - name: Fix restic excludes
    ansible.builtin.blockinfile:
      path: /usr/local/etc/restic-excludes.txt
      create: yes
      block: |
        /proc
        /sys
        /dev
        /run
        /var/cache/apt
        /var/lib/lxcfs
      owner: root
      group: root

  - name: Configure ssh with backup host
    ansible.builtin.blockinfile:
      path: /root/.ssh/config
      create: yes
      block: |
        host restic
            Hostname restic.karlsbakk.net
            User {{ ansible_hostname }}-bk

  - name: Crontab for backup
    cron:
      name: "Backup to Restic at 0100 each night"
      minute: "0"
      hour: "1"
      job: "/usr/local/bin/backup-to-restic.sh"
      state: present

